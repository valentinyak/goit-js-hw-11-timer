{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","refs","daysEl","document","querySelector","hoursEl","minsEl","secsEl","setInterval","currentDate","Date","timeComponents","getTimeComponents","textContent","pad","days","hours","mins","secs","timer","time","Math","floor","value","String","padStart","setTimer"],"mappings":";;;AA2EC,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3ED,QAAA,gBAEMA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAsErB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WAnEY,MAAA,WAAA,IAAA,EAAA,KACHC,EAAO,CACXC,OAAQC,SAASC,cACT,MAAA,OAAA,KAAKL,SAFF,6BAIXM,QAASF,SAASC,cACV,MAAA,OAAA,KAAKL,SALF,8BAOXO,OAAQH,SAASC,cACT,MAAA,OAAA,KAAKL,SARF,6BAUXQ,OAAQJ,SAASC,cACT,MAAA,OAAA,KAAKL,SADL,8BAKVS,YAAY,WACNC,IAAAA,EAAc,IAAIC,KAElBC,EAAiBC,EADV,EAAKZ,WAAaS,GAG7BR,EAAKC,OAAOW,YAAcC,EAAIH,EAAeI,MAC7Cd,EAAKI,QAAQQ,YAAcC,EAAIH,EAAeK,OAC9Cf,EAAKK,OAAOO,YAAcC,EAAIH,EAAeM,MAC7ChB,EAAKM,OAAOM,YAAcC,EAAIH,EAAeO,OAC5C,SA0CN,EAzEKpB,GAmCAqB,EAAQ,IAAIrB,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIU,KAAK,iBAKvB,SAASE,EAAkBQ,GA0BlB,MAAA,CAAEL,KArBIM,KAAKC,MAAMF,EAAQ,OAqBjBJ,MAdDK,KAAKC,MAAOF,EAAQ,MAAyB,MAcrCH,KARTI,KAAKC,MAAOF,EAAQ,KAAoB,KAQzBF,KAFfG,KAAKC,MAAOF,EAAQ,IAAc,MAKjD,SAASN,EAAIS,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAhCnCN,EAAMO","file":"src.a23e3343.js","sourceRoot":"..\\src","sourcesContent":["import './common.css';\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n  }\r\n\r\n  setTimer() {\r\n    const refs = {\r\n      daysEl: document.querySelector(\r\n        `div${this.selector} span[data-value=\"days\"]`,\r\n      ),\r\n      hoursEl: document.querySelector(\r\n        `div${this.selector} span[data-value=\"hours\"]`,\r\n      ),\r\n      minsEl: document.querySelector(\r\n        `div${this.selector} span[data-value=\"mins\"]`,\r\n      ),\r\n      secsEl: document.querySelector(\r\n        `div${this.selector} span[data-value=\"secs\"]`,\r\n      ),\r\n    };\r\n\r\n    setInterval(() => {\r\n      let currentDate = new Date();\r\n      let time = this.targetDate - currentDate;\r\n      let timeComponents = getTimeComponents(time);\r\n\r\n      refs.daysEl.textContent = pad(timeComponents.days);\r\n      refs.hoursEl.textContent = pad(timeComponents.hours);\r\n      refs.minsEl.textContent = pad(timeComponents.mins);\r\n      refs.secsEl.textContent = pad(timeComponents.secs);\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jan 1, 2021'),\r\n});\r\n\r\ntimer.setTimer();\r\n\r\nfunction getTimeComponents(time) {\r\n  /*\r\n   * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\r\n   * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\r\n   */\r\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n\r\n  /*\r\n   * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\r\n   * остатка % и делим его на количество миллисекунд в одном часе\r\n   * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\r\n   */\r\n  const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\r\n  /*\r\n   * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\r\n   * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\r\n   */\r\n  const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  /*\r\n   * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\r\n   * миллисекунд в одной секунде (1000)\r\n   */\r\n  const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n  return { days, hours, mins, secs };\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n"]}